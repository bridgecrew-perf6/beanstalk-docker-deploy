#!/bin/bash -xe

if [ $# != 3 ]; then
  echo missing arguments: $0 app_folder stage message
  exit 34
fi

app=$1
stage=$2
message=$3

# Loading app specific vars
source $app/.deploy_vars

# Setting up 2nd stage Dockerfile with timestamp
remote_repo=$DOCKER_REMOTE
timestamp=$(date --rfc-3339=seconds | sed 's/[ :+-]//g')
echo -e "FROM $remote_repo/$app-$stage:$timestamp\nEXPOSE 80" > Dockerfile
git add Dockerfile

# Secret password to decrypt GPG encryped file containing app-stage specific vars
gpg_secret_var_name="${GPG_ENV_PREFIX}_${stage^^}_GPG_SECRET"

[ "$GPG_DEBUG" = "true" ] && echo "$gpg_secret_var_name ==> ${!gpg_secret_var_name}"

# Building the app
cd $app
sudo docker build \
  --build-arg env_secret_passphrase=${!gpg_secret_var_name} \
  --build-arg deploy_stage=$stage \
  -t $app-$stage-tmp .
cd -

# Tagging and pushing to remote
sudo docker tag $app-$stage-tmp $remote_repo/$app-$stage:$timestamp
sudo docker tag $app-$stage-tmp $remote_repo/$app-$stage:latest
sudo $(aws ecr get-login --region $AWS_REGION --profile $AWS_CRED_PROFILE --no-include-email)
sudo docker push $remote_repo/$app-$stage:$timestamp
sudo docker push $remote_repo/$app-$stage:latest

echo "Ready to deploy? [Enter for yes, CTRL-C to cancel]"
read answer

for envname in $EB_${stage^^}_LIST
do
  eb deploy --staged --nohang --label $app-$stage:$timestamp $envname
done
eb events -f $EB_${stage^^}_WATCH
